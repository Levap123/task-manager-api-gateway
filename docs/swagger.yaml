basePath: /
definitions:
  proto.SignInResponse:
    properties:
      acces_token:
        type: string
      refresh_token:
        type: string
    type: object
  proto.Task:
    properties:
      body:
        type: string
      id:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  proto.TaskHelperBody:
    properties:
      id:
        type: string
    type: object
  proto.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  rest.errorResponse:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  rest.refreshBody:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  rest.signInBody:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  rest.signUpBody:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  rest.taskBody:
    properties:
      body:
        type: string
      title:
        type: string
    required:
    - body
    - title
    type: object
host: localhost:8080
info:
  contact:
    email: pavlikkim200401@gmail.com
    name: Levap Mik
    url: https://t.me/kavelpim123
  description: API gateway for microservice task-manager app, GRPC, protobuf
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: API gateway for microservice application
  version: "1.0"
paths:
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: get all tasks that assign to user by him id
      operationId: getall_task
      parameters:
      - default: Bearer <Add access token here>
        description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/proto.Task'
            type: array
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: get tasks by user id
      tags:
      - task
    post:
      consumes:
      - application/json
      description: create task and assign it to user
      operationId: create_task
      parameters:
      - description: task title and body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/rest.taskBody'
      - default: Bearer <Add access token here>
        description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.TaskHelperBody'
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: create task
      tags:
      - task
  /api/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: delete one task by user id and task id
      operationId: delete_task
      parameters:
      - description: ' ID'
        in: path
        name: id
        required: true
        type: string
      - default: Bearer <Add access token here>
        description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.TaskHelperBody'
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: delete task by id
      tags:
      - task
    get:
      consumes:
      - application/json
      description: get one task by user id and task id
      operationId: get_task
      parameters:
      - description: ' ID'
        in: path
        name: id
        required: true
        type: string
      - default: Bearer <Add access token here>
        description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.Task'
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: get task by id
      tags:
      - task
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh access token using refresh token
      operationId: refresh
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/rest.refreshBody'
      - default: Bearer <Add access token here>
        description: With the bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rest.refreshBody'
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: refresh
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/rest.signInBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.SignInResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: sign in
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: register
      operationId: register
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/rest.signUpBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proto.User'
        default:
          description: ""
          schema:
            $ref: '#/definitions/rest.errorResponse'
      summary: sign up
      tags:
      - auth
swagger: "2.0"
